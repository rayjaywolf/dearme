{% comment %}
  Animal for Animal Section
{% endcomment %}
<section class="animal-for-animal-section" style="background: {{ section.settings.background_color }};">
  {% comment %}
    <img
      src="{{ 'dog.webp' | asset_url }}"
      alt="Dog"
      class="animal-for-animal-bg"
      loading="lazy"
      width="700"
      height="700"
      style="opacity: 0.1;"
    >
  {% endcomment %}
  <div class="animal-for-animal-container">
    <div class="animal-for-animal-image-container">
      <img
        src="{{ 'afa.png' | asset_url }}"
        alt="Animal for Animal"
        class="animal-for-animal-image"
        loading="lazy"
        width="300"
        height="300"
        style="max-width: {{ section.settings.image_size }}px;"
      >
    </div>
    <div class="animal-for-animal-text-container">
      <p
        class="animal-for-animal-text js-animated-title"
        style="font-family: {{ section.settings.text_font }}, serif; font-style: {{ section.settings.text_style }}; text-transform: {{ section.settings.text_transform }}; color: {{ section.settings.text_color }}; font-size: {{ section.settings.text_size }}rem;"
      >
        Our 'Animal for Animal' promise is simple: every purchase you make helps an animal in need. We believe in the
        deep connection between all living beings, which is why a portion of every Dear Me order goes directly towards
        nourishing stray animals. Your choice becomes an act of kindness, helping us build a world where compassion is
        extended to every corner of the animal kingdom.
      </p>
      {% if section.settings.button_label != blank %}
        <a
          href="{{ section.settings.button_link }}"
          class="animal-for-animal-button"
          style="background-color: {{ section.settings.button_bg_color }}; color: {{ section.settings.button_text_color }}; border-color: {{ section.settings.button_border_color }}; font-family: {{ section.settings.button_font }}, sans-serif; text-transform: {{ section.settings.button_transform }}; font-style: {{ section.settings.button_style }};"
        >
          <span style="color: {{ section.settings.button_text_color }};">{{ section.settings.button_label }}</span>
          <div class="intro_cta-arrow" style="background: {{ section.settings.button_arrow_bg }};">
            <svg
              class="iconArrow"
              width="13"
              height="8"
              viewBox="0 0 13 8"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              style="fill: {{ section.settings.button_arrow_color }};"
            >
              <path d="M12.3536 4.35355C12.5488 4.15829 12.5488 3.84171 12.3536 3.64645L9.17157 0.464466C8.97631 0.269204 8.65973 0.269204 8.46447 0.464466C8.2692 0.659728 8.2692 0.976311 8.46447 1.17157L11.2929 4L8.46447 6.82843C8.2692 7.02369 8.2692 7.34027 8.46447 7.53553C8.65973 7.7308 8.97631 7.7308 9.17157 7.53553L12.3536 4.35355ZM0 4.5H12V3.5H0V4.5Z"></path>
            </svg>
            <svg
              class="iconArrow"
              width="13"
              height="8"
              viewBox="0 0 13 8"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              style="fill: {{ section.settings.button_arrow_color }};"
            >
              <path d="M12.3536 4.35355C12.5488 4.15829 12.5488 3.84171 12.3536 3.64645L9.17157 0.464466C8.97631 0.269204 8.65973 0.269204 8.46447 0.464466C8.2692 0.659728 8.2692 0.976311 8.46447 1.17157L11.2929 4L8.46447 6.82843C8.2692 7.02369 8.2692 7.34027 8.46447 7.53553C8.65973 7.7308 8.97631 7.7308 9.17157 7.53553L12.3536 4.35355ZM0 4.5H12V3.5H0V4.5Z"></path>
            </svg>
          </div>
        </a>
      {% endif %}
    </div>
  </div>
</section>

<style>
  .animal-for-animal-section {
    width: 100%;
    padding: 4rem 0 4rem 0;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    overflow: hidden;
  }
  .animal-for-animal-bg {
    position: absolute;
    right: 5rem;
    bottom: 0;
    z-index: 0;
    pointer-events: none;
    width: 250px;
    max-width: 90vw;
    height: auto;
    object-fit: contain;
  }
  .animal-for-animal-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    max-width: 1200px;
    gap: 4rem;
    width: 100%;
    padding: 0 2rem;
  }
  .animal-for-animal-image-container {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .animal-for-animal-image {
    width: 100%;
    height: auto;
  }
  .animal-for-animal-text-container {
    flex: 2;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
  }
  .animal-for-animal-text {
    width: 100%;
    line-height: 1.7;
  }
  .animal-for-animal-button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem 0.5rem;
    font-size: 0.8rem;
    text-decoration: none;
    border-radius: 999px;
    text-transform: uppercase;
    transition: background-color 0.3s ease;
    border: 2px solid;
    margin-top: 3rem;
    gap: 4rem;
    overflow: hidden;
  }
  .animal-for-animal-button span {
    margin-right: 1rem;
    padding-left: 1rem;
  }
  .animal-for-animal-button .intro_cta-arrow {
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
    border-radius: 100%;
    height: 2.4rem;
    width: 2.4rem;
    position: relative;
    overflow: hidden;
  }
  .animal-for-animal-button .iconArrow {
    width: 15px;
    height: 10px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scaleX(1);
    transform-origin: center;
    transition: transform 0.8s cubic-bezier(0.18, 0.71, 0.11, 1), opacity 0.8s cubic-bezier(0.18, 0.71, 0.11, 1);
  }
  .animal-for-animal-button .intro_cta-arrow .iconArrow:last-child {
    left: 50%;
    opacity: 0;
    transform: translate(-300%, -50%) scaleX(2);
  }
  .animal-for-animal-button:hover .intro_cta-arrow .iconArrow:first-child {
    opacity: 0;
    transform: translate(200%, -50%) scaleX(2);
  }
  .animal-for-animal-button:hover .intro_cta-arrow .iconArrow:last-child {
    opacity: 1;
    transform: translate(-50%, -50%) scaleX(1);
  }
  .animal-for-animal-button:hover {
    background-color: #fff;
    color: #fff;
    border-color: #fff;
  }
  @media (max-width: 900px) {
    .animal-for-animal-container {
      flex-direction: column;
      gap: 2rem;
      padding: 0 1rem;
    }
    .animal-for-animal-image {
      max-width: 220px;
    }
    .animal-for-animal-text {
      padding: 1.2rem 1.2rem;
    }
    .animal-for-animal-button {
      font-size: 0.6rem;
      padding: 0.5rem 0.75rem;
    }
    .animal-for-animal-button span {
      padding-left: 0;
    }
    .animal-for-animal-button .intro_cta-arrow {
      width: 3.5rem;
      height: 2.2rem;
    }
    .animal-for-animal-button .iconArrow {
      width: 10px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    if (typeof gsap === 'undefined' || typeof SplitText === 'undefined') return;
    gsap.registerPlugin(SplitText);

    function initAnimalForAnimalTextAnimation() {
      const text = document.querySelector('.animal-for-animal-text.js-animated-title');
      const buttonElement = document.querySelector('.animal-for-animal-button');

      if (!text) return;

      // Split text into lines
      const splitText = new SplitText(text, { type: 'lines', linesClass: 'line' });
      // Create mask wrapper for each line
      splitText.lines.forEach((line) => {
        const wrapper = document.createElement('div');
        wrapper.style.overflow = 'hidden';
        wrapper.style.lineHeight = '1.7';
        line.parentNode.insertBefore(wrapper, line);
        wrapper.appendChild(line);
      });
      // Set initial state
      gsap.set(splitText.lines, { yPercent: 110 });

      // Set initial state for button
      if (buttonElement) {
        gsap.set(buttonElement, { opacity: 0, y: 20 });
      }

      // Observer for animation
      const observer = new IntersectionObserver(
        function (entries) {
          if (entries[0].isIntersecting) {
            const tl = gsap.timeline();

            // Animate text lines
            tl.to(splitText.lines, {
              yPercent: 0,
              duration: 1.8,
              stagger: 0.15,
              ease: 'power4.out',
            });

            // Animate button after text animation
            if (buttonElement) {
              tl.to(
                buttonElement,
                {
                  opacity: 1,
                  y: 0,
                  duration: 1.6,
                  ease: 'power4.out',
                },
                '-=1.2'
              );
            }

            observer.disconnect();
          }
        },
        { threshold: 0.1 }
      );
      observer.observe(text);
    }

    // Wait for fonts if available
    if (document.fonts && document.fonts.ready) {
      document.fonts.ready.then(initAnimalForAnimalTextAnimation);
    } else {
      setTimeout(initAnimalForAnimalTextAnimation, 100);
    }
  });
</script>

{% schema %}
{
  "name": "Animal for Animal",
  "settings": [
    {
      "type": "header",
      "content": "Background Settings"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#FE5F78"
    },
    {
      "type": "header",
      "content": "Image Settings"
    },
    {
      "type": "range",
      "id": "image_size",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Image Size",
      "default": 250
    },
    {
      "type": "header",
      "content": "Typography Settings"
    },
    {
      "type": "select",
      "id": "text_font",
      "label": "Text Font",
      "options": [
        {
          "value": "Gumani",
          "label": "Gumani"
        },
        {
          "value": "Instrument Serif",
          "label": "Instrument Serif"
        },
        {
          "value": "PPEditorial New",
          "label": "PPEditorial New"
        },
        {
          "value": "Inter",
          "label": "Inter"
        }
      ],
      "default": "Inter"
    },
    {
      "type": "select",
      "id": "text_style",
      "label": "Text Style",
      "options": [
        {
          "value": "normal",
          "label": "Regular"
        },
        {
          "value": "italic",
          "label": "Italic"
        }
      ],
      "default": "normal"
    },
    {
      "type": "select",
      "id": "text_transform",
      "label": "Text Transform",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "capitalize",
          "label": "Capitalize"
        },
        {
          "value": "uppercase",
          "label": "Uppercase"
        },
        {
          "value": "lowercase",
          "label": "Lowercase"
        }
      ],
      "default": "none"
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 0.6,
      "max": 1.2,
      "step": 0.1,
      "unit": "rem",
      "label": "Text Size",
      "default": 1.1
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#fff"
    },
    {
      "type": "header",
      "content": "Button Settings"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "Read More"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "select",
      "id": "button_font",
      "label": "Button Font",
      "options": [
        {
          "value": "Gumani",
          "label": "Gumani"
        },
        {
          "value": "Instrument Serif",
          "label": "Instrument Serif"
        },
        {
          "value": "PPEditorial New",
          "label": "PPEditorial New"
        },
        {
          "value": "Inter",
          "label": "Inter"
        }
      ],
      "default": "Inter"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button Font Style",
      "options": [
        {
          "value": "normal",
          "label": "Regular"
        },
        {
          "value": "italic",
          "label": "Italic"
        }
      ],
      "default": "normal"
    },
    {
      "type": "select",
      "id": "button_transform",
      "label": "Button Text Transform",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "capitalize",
          "label": "Capitalize"
        },
        {
          "value": "uppercase",
          "label": "Uppercase"
        },
        {
          "value": "lowercase",
          "label": "Lowercase"
        }
      ],
      "default": "uppercase"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button Background Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button Text Color",
      "default": "#63001f"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button Border Color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_arrow_bg",
      "label": "Button Arrow Background",
      "default": "#AA336A"
    },
    {
      "type": "color",
      "id": "button_arrow_color",
      "label": "Button Arrow Color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Animal for Animal"
    }
  ]
}
{% endschema %}
